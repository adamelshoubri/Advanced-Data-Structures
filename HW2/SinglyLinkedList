//Adam Elshoubri
//Advanced Data Structures
//HW#2 

public class SinglyLinkedList {
   private Node head;  
  
   private static class Node {  
      private int value;  
      private Node next;  
      Node(int value) {  
         this.value = value;  
      }  
   }  
  
   public void addLast(Node node) {  
     if (head == null)   
         {head = node;}  
     else {  
      Node temp = head;  
      while (temp.next != null)  
      temp = temp.next;  
      temp.next = node;  
     }  
   }  
    
   public void printList() {  
      Node temp = head;  
      while (temp != null) {  
         System.out.format("%d ", temp.value);  
         temp = temp.next;  
      }  
      System.out.println();  
   }   
   
   public Node nthNode(Node head,int n)  
   {  
      Node first=head;  
      Node second=head;  
      for (int i = 0; i < n; i++) {  
         first=first.next;  
      }  
      while(first!=null)  
      {  
         first=first.next;  
         second=second.next;  
      }  
      return second;  
   }  
   
   public static void main(String[] args) {  
      SinglyLinkedList list = new SinglyLinkedList();
      // Creating a linked list   
      Node head=new Node(5);  
      list.addLast(head);  
      list.addLast(new Node(6));  
      list.addLast(new Node(7));  
      list.addLast(new Node(1));  
      list.addLast(new Node(2));
      list.addLast(new Node(3)); 
      list.addLast(new Node(8));
   
      list.printList();  
      // Finding node from index 
      Node nthNode= list.nthNode(head,3);  
      System.out.println("Node at index 4 is : "+ nthNode.value);  
   }   
}
